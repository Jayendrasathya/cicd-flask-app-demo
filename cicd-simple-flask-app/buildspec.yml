version: 0.2

env:
  variables:
    REPO_URI: 121099973511.dkr.ecr.eu-west-2.amazonaws.com/cicd-demo-flask-ecr

phases:
  install:
    runtime-versions:
      python: 3.11
  pre_build:
    commands:
      - echo Logging in to ECR...
      - aws --version
      - aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin $REPO_URI
      - echo Login successful
      - echo Pulling the existing latest image...
      - docker pull $REPO_URI:latest || true

  build:
    commands:
      - echo Installing dependencies...
      - cd Deploy-in-ECS/
      - pip install -r requirements.txt
      - echo Build started on `date`
      - TIMESTAMP=$(date +%Y%m%d%H%M%S)
      - echo TIMESTAMP=$TIMESTAMP
      - echo Tagging the old latest image...
      - if [ "$(docker images -q $REPO_URI:latest 2> /dev/null)" != "" ]; then docker tag $REPO_URI:latest $REPO_URI:$TIMESTAMP; fi
      - echo Building the new Docker image...
      - docker build -t cicd-demo-flask-ecr:latest .
      - docker tag cicd-demo-flask-ecr:latest $REPO_URI:latest

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the old latest image with timestamp tag...
      - if [ "$(docker images -q $REPO_URI:$TIMESTAMP 2> /dev/null)" != "" ]; then docker push $REPO_URI:$TIMESTAMP; fi
      - echo Pushing the new latest image...
      - docker push $REPO_URI:latest
      - echo Writing image definitions file...
      - DOCKER_CONTAINER_NAME=cicd
      - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $REPO_URI:latest > imagedefinition.json
      - echo $DOCKER_CONTAINER_NAME
      - echo Printing imagedefinition.json...
      - cat imagedefinition.json

artifacts:
  files: imagedefinition.json
  base-directory: Deploy-in-ECS/
